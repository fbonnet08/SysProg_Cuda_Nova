Building_Block = (building_block_id INT, building_block_name VARCHAR(60), building_block_structure VARCHAR(100));
Tool = (tool_id INT, instrument_source VARCHAR(50));
Platform_User = (platform_user_id INT, firstname VARCHAR(50), lastname VARCHAR(50), affiliation VARCHAR(50), phone VARCHAR(50), email VARCHAR(50));
Ionisation_mode = (ionisation_mode_id INT, ionisation_mode VARCHAR(50), signum INT);
Analytics_data = (analytics_data_id INT, date_id INT, sample_name VARCHAR(50), sample_details VARCHAR(100), sample_solvent VARCHAR(50), number_scans VARCHAR(50), filename VARCHAR(50));
Database_Details = (database_id INT, database_name VARCHAR(50), database_affiliation VARCHAR(50), database_path VARCHAR(100), library_quality_legend VARCHAR(250));
DateTable = (date_id INT, date_column DATE, time_column TIME, timestamp_with_tz_column VARCHAR(50), #(analytics_data_id, date_id_1));
LoginTable = (login_id INT, user_id VARCHAR(50), firstname VARCHAR(50), lastename VARCHAR(50), username VARCHAR(50), password VARCHAR(50), role VARCHAR(50), affiliation VARCHAR(50), department VARCHAR(50), researchlab VARCHAR(50));
ionmodechem = (ionmodechem_id INT, chemical_composition VARCHAR(80));
Charge = (charge_id INT, charge VARCHAR(10));
Experiment = (experiment_id INT, scan_id INT, ionisation_mode_id INT, #ionisation_mode_id_1);
Data = (data_id INT, path_to_data VARCHAR(150), raw_file VARCHAR(60), csv_file VARCHAR(60), xls_file VARCHAR(60), asc_file VARCHAR(60), mgf_file VARCHAR(50), m2s_file VARCHAR(50), json_file VARCHAR(50), #experiment_id);
Spectral_data = (spectral_data_id INT, feature_id INT, pepmass DECIMAL(15,2), ionmodechem_id INT, charge_id INT, MSLevel INT, scan_number VARCHAR(50), retention_time TIME, mol_json_file VARCHAR(50), tool_id INT, pi_name_id INT, data_collector_id INT, num_peaks INT, peaks_list VARCHAR(50), #ionmodechem_id_1, #charge_id_1, #tool_id_1, #database_id, #data_id);
Fragment = (fragment_id INT, mz_value DECIMAL(15,2), relative DECIMAL(15,2), #spectral_data_id);
Compound = (coumpound_id INT, spectral_data_id INT, compound_name VARCHAR(50), smiles VARCHAR(50), pubchem VARCHAR(50), molecular_formula VARCHAR(50), taxonomy VARCHAR(50), library_quality VARCHAR(50), #spectral_data_id_1);
Composing = (#experiment_id, #spectral_data_id);
Identifying = (#experiment_id, #coumpound_id);
Experimenting = (#experiment_id, #(analytics_data_id, date_id));
Building = (#building_block_id, #spectral_data_id);
Tooling = (#tool_id, #platform_user_id);
Ionising = (#tool_id, #ionisation_mode_id);
Analysing = (#tool_id, #(analytics_data_id, date_id));


------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Building_Block(
   building_block_id INT,
   building_block_name VARCHAR(60),
   building_block_structure VARCHAR(100),
   PRIMARY KEY(building_block_id)
);

CREATE TABLE Tool(
   tool_id INT,
   instrument_source VARCHAR(50),
   PRIMARY KEY(tool_id)
);

CREATE TABLE Platform_User(
   platform_user_id INT,
   firstname VARCHAR(50),
   lastname VARCHAR(50),
   affiliation VARCHAR(50),
   phone VARCHAR(50),
   email VARCHAR(50),
   PRIMARY KEY(platform_user_id)
);

CREATE TABLE Ionisation_mode(
   ionisation_mode_id INT,
   ionisation_mode VARCHAR(50),
   signum INT,
   PRIMARY KEY(ionisation_mode_id)
);

CREATE TABLE Analytics_data(
   analytics_data_id INT,
   date_id INT,
   sample_name VARCHAR(50),
   sample_details VARCHAR(100),
   sample_solvent VARCHAR(50),
   number_scans VARCHAR(50),
   filename VARCHAR(50),
   PRIMARY KEY(analytics_data_id, date_id)
);

CREATE TABLE Database_Details(
   database_id INT,
   database_name VARCHAR(50),
   database_affiliation VARCHAR(50),
   database_path VARCHAR(100),
   library_quality_legend VARCHAR(250),
   PRIMARY KEY(database_id)
);

CREATE TABLE DateTable(
   date_id INT,
   date_column DATE,
   time_column TIME,
   timestamp_with_tz_column VARCHAR(50),
   analytics_data_id INT NOT NULL,
   date_id_1 INT NOT NULL,
   PRIMARY KEY(date_id),
   UNIQUE(analytics_data_id, date_id_1),
   FOREIGN KEY(analytics_data_id, date_id_1) REFERENCES Analytics_data(analytics_data_id, date_id)
);

CREATE TABLE LoginTable(
   login_id INT,
   user_id VARCHAR(50) NOT NULL,
   firstname VARCHAR(50),
   lastename VARCHAR(50),
   username VARCHAR(50),
   password VARCHAR(50),
   role VARCHAR(50),
   affiliation VARCHAR(50),
   department VARCHAR(50),
   researchlab VARCHAR(50),
   PRIMARY KEY(login_id)
);

CREATE TABLE ionmodechem(
   ionmodechem_id INT,
   chemical_composition VARCHAR(80),
   PRIMARY KEY(ionmodechem_id)
);

CREATE TABLE Charge(
   charge_id INT,
   charge VARCHAR(10),
   PRIMARY KEY(charge_id)
);

CREATE TABLE Experiment(
   experiment_id INT,
   scan_id INT NOT NULL,
   ionisation_mode_id INT,
   ionisation_mode_id_1 INT NOT NULL,
   PRIMARY KEY(experiment_id),
   UNIQUE(ionisation_mode_id_1),
   FOREIGN KEY(ionisation_mode_id_1) REFERENCES Ionisation_mode(ionisation_mode_id)
);

CREATE TABLE Data(
   data_id INT,
   path_to_data VARCHAR(150),
   raw_file VARCHAR(60),
   csv_file VARCHAR(60),
   xls_file VARCHAR(60),
   asc_file VARCHAR(60),
   mgf_file VARCHAR(50),
   m2s_file VARCHAR(50),
   json_file VARCHAR(50),
   experiment_id INT NOT NULL,
   PRIMARY KEY(data_id),
   FOREIGN KEY(experiment_id) REFERENCES Experiment(experiment_id)
);

CREATE TABLE Spectral_data(
   spectral_data_id INT,
   feature_id INT NOT NULL,
   pepmass DECIMAL(15,2),
   ionmodechem_id INT,
   charge_id INT,
   MSLevel INT NOT NULL,
   scan_number VARCHAR(50),
   retention_time TIME,
   mol_json_file VARCHAR(50),
   tool_id INT NOT NULL,
   pi_name_id INT NOT NULL,
   data_collector_id INT NOT NULL,
   num_peaks INT,
   peaks_list VARCHAR(50),
   ionmodechem_id_1 INT NOT NULL,
   charge_id_1 INT NOT NULL,
   tool_id_1 INT NOT NULL,
   database_id INT NOT NULL,
   data_id INT NOT NULL,
   PRIMARY KEY(spectral_data_id),
   FOREIGN KEY(ionmodechem_id_1) REFERENCES ionmodechem(ionmodechem_id),
   FOREIGN KEY(charge_id_1) REFERENCES Charge(charge_id),
   FOREIGN KEY(tool_id_1) REFERENCES Tool(tool_id),
   FOREIGN KEY(database_id) REFERENCES Database_Details(database_id),
   FOREIGN KEY(data_id) REFERENCES Data(data_id)
);

CREATE TABLE Fragment(
   fragment_id INT,
   mz_value DECIMAL(15,2),
   relative DECIMAL(15,2),
   spectral_data_id INT NOT NULL,
   PRIMARY KEY(fragment_id),
   FOREIGN KEY(spectral_data_id) REFERENCES Spectral_data(spectral_data_id)
);

CREATE TABLE Compound(
   coumpound_id INT,
   spectral_data_id INT NOT NULL,
   compound_name VARCHAR(50),
   smiles VARCHAR(50),
   pubchem VARCHAR(50),
   molecular_formula VARCHAR(50),
   taxonomy VARCHAR(50),
   library_quality VARCHAR(50),
   spectral_data_id_1 INT NOT NULL,
   PRIMARY KEY(coumpound_id),
   UNIQUE(spectral_data_id_1),
   FOREIGN KEY(spectral_data_id_1) REFERENCES Spectral_data(spectral_data_id)
);

CREATE TABLE Composing(
   experiment_id INT,
   spectral_data_id INT,
   PRIMARY KEY(experiment_id, spectral_data_id),
   FOREIGN KEY(experiment_id) REFERENCES Experiment(experiment_id),
   FOREIGN KEY(spectral_data_id) REFERENCES Spectral_data(spectral_data_id)
);

CREATE TABLE Identifying(
   experiment_id INT,
   coumpound_id INT,
   PRIMARY KEY(experiment_id, coumpound_id),
   FOREIGN KEY(experiment_id) REFERENCES Experiment(experiment_id),
   FOREIGN KEY(coumpound_id) REFERENCES Compound(coumpound_id)
);

CREATE TABLE Experimenting(
   experiment_id INT,
   analytics_data_id INT,
   date_id INT,
   PRIMARY KEY(experiment_id, analytics_data_id, date_id),
   FOREIGN KEY(experiment_id) REFERENCES Experiment(experiment_id),
   FOREIGN KEY(analytics_data_id, date_id) REFERENCES Analytics_data(analytics_data_id, date_id)
);

CREATE TABLE Building(
   building_block_id INT,
   spectral_data_id INT,
   PRIMARY KEY(building_block_id, spectral_data_id),
   FOREIGN KEY(building_block_id) REFERENCES Building_Block(building_block_id),
   FOREIGN KEY(spectral_data_id) REFERENCES Spectral_data(spectral_data_id)
);

CREATE TABLE Tooling(
   tool_id INT,
   platform_user_id INT,
   PRIMARY KEY(tool_id, platform_user_id),
   FOREIGN KEY(tool_id) REFERENCES Tool(tool_id),
   FOREIGN KEY(platform_user_id) REFERENCES Platform_User(platform_user_id)
);

CREATE TABLE Ionising(
   tool_id INT,
   ionisation_mode_id INT,
   PRIMARY KEY(tool_id, ionisation_mode_id),
   FOREIGN KEY(tool_id) REFERENCES Tool(tool_id),
   FOREIGN KEY(ionisation_mode_id) REFERENCES Ionisation_mode(ionisation_mode_id)
);

CREATE TABLE Analysing(
   tool_id INT,
   analytics_data_id INT,
   date_id INT,
   PRIMARY KEY(tool_id, analytics_data_id, date_id),
   FOREIGN KEY(tool_id) REFERENCES Tool(tool_id),
   FOREIGN KEY(analytics_data_id, date_id) REFERENCES Analytics_data(analytics_data_id, date_id)
);
